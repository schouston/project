import java.awt.*;
import java.awt.event.*;

import javax.swing.*;



public class StarGUI extends JFrame {
	
	private JPanel west, centre, south;
	//private StarCanvas canvas;
	private JTextArea dataDisplay;
	private JLabel searchLabel, filterDistLabel, filterMagLabel;
	public JTextField searchbox;
	public JButton returnButton;
	public JComboBox<String> distBox, magBox;
	private DisplayPanel mainDisplay;
	
	public JMenu distMenu;
	
	
	
	private StarManager manager;
	//private CreateStars stars;
	private StarController controller;
	
	final int FRAME_WIDTH = 1600;
	final int FRAME_HEIGHT = 920;
	
	
	public StarGUI(StarController c, StarManager m, DisplayPanel d){
		
		manager = m;
		controller = c;
		mainDisplay = d;
		setDefaultCloseOperation(EXIT_ON_CLOSE);
		setTitle("Star Test GUI");
		setSize(FRAME_WIDTH, FRAME_HEIGHT);
		//inputStars();
		layoutWest();
		layoutCentre();
		layoutSouth();
		//DrawPoint point = new DrawPoint();
		//this.add(point);		
	}
	
	/*public void inputStars(){
		stars = new CreateStars();
		stars.createHippStars();
		manager = stars.getManager();
	}*/
	
	public void layoutWest(){
		west = new JPanel(new BorderLayout());
		//BorderLayout border = new BorderLayout();
		//west.setLayout(border);
		//west.setSize(100, 400);
		west.setBackground(Color.gray);
		Font font = new Font("Verdana", Font.PLAIN, 12);
		dataDisplay = new JTextArea();
		dataDisplay.setFont(font);
		dataDisplay.setBackground(Color.lightGray);
		dataDisplay.setEditable(false);
		//dataDisplay.setLayout();
		dataDisplay.append(manager.printSunData());
		
		//JButton returnButton = new JButton("Centre on sun");
		Font buttonfont = new Font("Verdana", Font.BOLD, 14);
		JPanel buttonPanel = new JPanel(new BorderLayout());
		returnButton = new JButton("Centre on sun");
		returnButton.setFont(buttonfont);
		returnButton.addActionListener(controller);
		JButton systemButton = new JButton("View Star System");
		systemButton.setFont(buttonfont);
		JButton planetButton = new JButton("View Planetary System");
		planetButton.setFont(buttonfont);
		///returnButton.setSize(2,2);
		buttonPanel.add(returnButton, BorderLayout.SOUTH);
		buttonPanel.add(systemButton, BorderLayout.NORTH);
		buttonPanel.add(planetButton, BorderLayout.CENTER);
	
		west.add(dataDisplay, BorderLayout.NORTH);
		west.add(buttonPanel, BorderLayout.SOUTH);
		//west.add(returnButton, BorderLayout.SOUTH);
		this.add(west, BorderLayout.WEST);
	}
	
	public void layoutCentre(){

		mainDisplay.addMouseListener(controller);
		mainDisplay.setPreferredSize(new Dimension(1600, 1600));
		
		JScrollPane scroll = new JScrollPane(mainDisplay,  ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS, ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
		
		this.add(scroll, BorderLayout.CENTER);
		//this.getContentPane().add(scroll);
		
		
		//canvas.setBackground(Color.black);
		//canvas.addMouseListener(controller);
		//DrawPoint points = new DrawPoint(manager);
		//canvas.paint(points,BorderLayout.CENTER);
		//this.add(canvas, BorderLayout.CENTER);		
		/*centre = new JPanel();
		centre.setLayout(new BorderLayout());
		centre.setBackground(Color.black);
		DrawPoint point = new DrawPoint(manager);
		centre.add(point, BorderLayout.CENTER);
		this.add(centre, BorderLayout.CENTER);*/
	}
	
	public void layoutSouth(){
		
		south = new JPanel();
		south.setBorder(BorderFactory.createLineBorder(Color.black));
		GridLayout grid = new GridLayout(0,4);
		
		south.setBackground(Color.lightGray);
		south.setLayout(grid);
		Font font = new Font("Verdana", Font.BOLD, 12);
		searchLabel = new JLabel("Search");
		searchLabel.setFont(font);
		searchLabel.setBorder(BorderFactory.createLineBorder(Color.black));
		searchbox = new JTextField();
		searchbox.addActionListener(controller);
		searchbox.setBorder(BorderFactory.createLineBorder(Color.black));
		searchbox.setSize(10, 10);
		searchbox.setText("enter name here");
		filterDistLabel = new JLabel("Filter by distance");
		filterDistLabel.setFont(font);
		filterDistLabel.setBorder(BorderFactory.createLineBorder(Color.black));
		JLabel blank = new JLabel("");
		JLabel blank1 = new JLabel("");
		filterMagLabel = new JLabel("Filter by magnitude");
		filterMagLabel.setFont(font);
		filterMagLabel.setBorder(BorderFactory.createLineBorder(Color.black));
		
		/*distMenu = new JMenu("dist filter");
		JMenuItem ten = new JMenuItem("upto 10");
		JMenuItem five = new JMenuItem("upto 5");
		distMenu.add(ten);
		distMenu.add(five);*/
		
		String [] filtDStrings = { "upto 5", "upto 10"};
		distBox = new JComboBox<String>(filtDStrings);
		distBox.addActionListener(controller);
		//distBox.addItem("up to 5");
		//distBox.addItem("up to 10");
		String [] filtMStrings = { "upto x", " upto y"};
		magBox = new JComboBox<String>(filtMStrings);
		magBox.addActionListener(controller);
		//magBox.addItem("upto 10");
		//magBox.addItem("upto 20");
		south.add(searchLabel);
		south.add(blank);
		south.add(filterDistLabel);
		//south.add(distMenu);
		south.add(distBox);
		south.add(searchbox);
		south.add(blank1);
		south.add(filterMagLabel);
		south.add(magBox);
		
		this.add(south, BorderLayout.SOUTH);
	}
	
	//method to display data on selected star
	public void updateDataDisplay(int index){
		dataDisplay.setText("");	
		if (index == -1)
			dataDisplay.append(manager.printSunData());
		else
			dataDisplay.append(manager.printStarData(index));
	}
	
}
